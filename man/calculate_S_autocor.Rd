% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate_S_autocor.R
\name{calculate_S_autocor}
\alias{calculate_S_autocor}
\title{Calculate S for autocorrelated data.}
\usage{
calculate_S_autocor(
  x,
  Sigma,
  nu,
  results,
  phi_obs = NULL,
  phi_var = NULL,
  first_cp_only = FALSE,
  cp_of_interest = 1
)
}
\arguments{
\item{x}{Vector of data.}

\item{Sigma}{Covariance matrix of \code{x}.}

\item{nu}{Vector that defines the test statistic, which is \eqn{\nu^T x}.}

\item{results}{Output of changepoint algorithm (either \code{binary_segmentation}, \code{wild_binary_segmentation}, or
\code{narrowest_over_threshold}).}

\item{phi_obs}{Observed value of the test statistic \eqn{\nu^T x}; optional.}

\item{phi_var}{Variance of the test statistic; optional.}

\item{first_cp_only}{Logical. If \code{TRUE}, condition on the fact that the changepoint of interest is in the model;
if \code{FALSE}, condition on all changepoints. Defaults to \code{FALSE}.}

\item{cp_of_interest}{Index of the changepoint of interest. Defaults to 1.}
}
\value{
A dataframe containing intervals with the changepoints obtained when \eqn{\phi} is in each interval.
}
\description{
For a given dataset and changepoint algorithm (one of binary segmentation, wild binary segmentation, or narrowest over threshold),
calculate the possible outcomes that can be obtained by applying the algorithm to
the perturbed dataset \eqn{X'(\phi)}, and the intervals of \eqn{\phi} values that lead to each possible outcome. See below for more details.
}
\details{
\eqn{X'(\phi)} is defined as
\deqn{X'(\phi) = X_{obs} + \frac{1}{||\nu||^2} \nu (\phi - \phi_{obs}).}
}
\examples{
set.seed(100)
rho <- 0.7
n <- 100
x <- arp(n, rho, mu=c(rep(1, n/2), rep(-1, n/2)))
results <- find_changepoints(x, "bs")
b <- resutls$changepoints
print(b)
h <- 10
nu <- c(rep(0, b[1] - h), rep(1/h, h), rep(-1/h, h), rep(0, length(x) - b[1] - h))
Sigma <- diag((1 - rho^seq(2, 2*n, by=2))/(1 - rho^2))
for ( i in 1:(n - 1) ){
  Sigma[(i + 1):n, i] <- Sigma[i, (i + 1):n] <- rho^seq(1:(n - i)) * Sigma[i, i]
}
calculate_S_autocor(x, Sigma, nu, results, first_cp_only=TRUE)

}
