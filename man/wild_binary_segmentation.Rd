% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wild_binary_segmentation.R
\name{wild_binary_segmentation}
\alias{wild_binary_segmentation}
\title{Wild Binary Segmentation}
\usage{
wild_binary_segmentation(
  x,
  num_rand_samples = 1000,
  random_samples = NULL,
  threshold = NULL,
  maxiter = NULL,
  model = "mean",
  loss = "lrs",
  seeded = FALSE,
  decay = sqrt(2),
  return_full_results = FALSE,
  prev_full_results = NULL,
  hlims = NULL
)
}
\arguments{
\item{x}{Vector of data.}

\item{num_rand_samples}{num_rand_samples Number of random intervals to use (defaults to 1000). Ignored if \code{random_samples} is specified.}

\item{random_samples}{N x 2 matrix of random intervals to use (optional; can be generated within the function).}

\item{threshold}{Changepoint detection threshold, should be a non-negative number. Defaults to \code{sqrt(2 * log(length(x)) * mad(x))}.}

\item{maxiter}{Maximum number of changepoints to find: defaults to \code{n - 1} (or \code{n - 2} if \code{model = "slope"}.}

\item{model}{Changepoint model: one of \code{"mean"} (change in mean; default), \code{"slope"} (change in slope), or \code{"var"} (change in variance).}

\item{loss}{Loss function (only if \code{model = "var"}): one of \code{"lrs"}, \code{"cusum"}, or \code{"icss"}. (See below.)}

\item{seeded}{Whether to implement seeded binary segmentation (defaults to \code{FALSE}).}

\item{decay}{Decay parameter for seeded binary segmentation; only used if \code{seeded = TRUE}.}

\item{return_full_results}{If \code{TRUE}, a data frame containing the changepoint candidate for each random interval will be returned with the results.}

\item{prev_full_results}{Data frame or matrix containing the full output from a previous run of the algorithm.
This can be used to save computation time if the algorithm is run repeatedly, with the same set of random intervals, on perturbations of the data; otherwise, it should be left \code{NULL}.}

\item{hlims}{Vector of length 2, which defines the boundaries of the region of interest.
Used if the algorithm is run repeatedly on perturbations of the original data, where data are perturbed within a window \code{(hlims[1], hlims[2])}.
This means that the values of the CUSUM statistic corresponding to random intervals entirely outside of this window do not change, and so do not have to be re-calculated.}
}
\value{
A list.
\itemize{
\item \code{results} Dataframe containing results.
\item \code{changepoints} Vector of changepoints detected.
\item \code{rand_ints} N x 2 matrix containing random intervals used in the algorithm.
\item \code{threshold} Value of \code{threshold} used.
\item \code{maxiter} Value of \code{maxiter} used.
}
}
\description{
Implements wild or seeded binary segmentation algorithm for changepoint detection.
}
\details{
There are three options for the changepoint model. In each case the data is assumed to be of the form
\eqn{x_t = \mu_t + \sigma_t \epsilon_t}, where \eqn{\epsilon_t \sim N(0, 1)}. The options are:
\itemize{
\item \code{model = "mean"} (change in mean): \eqn{\mu_t} is constant except at changepoints; \eqn{\sigma_t} is constant
\item \code{model = "slope"} (change in slope): \eqn{\mu_t = a_t + t b_t}, with \eqn{a_t} and \eqn{b_t} constant except at changepoints; \eqn{\sigma_t} is constant
\item \code{model = "var"} (change in variance): \eqn{\mu_t = 0} and \eqn{\sigma_t} is constant except at changepoints.
}
For the change in variance model (\code{model = "var"}), there are three possible loss functions for estimating changeoints.
If \code{loss = "lrs"}, the likelihood ratio statistic will be used for each interval
\deqn{(e - s + 1) \log \sum_{t=s}^e X_t^2 - (\tau - s + 1) \log \sum_{t=s}^{\tau} X_t^2 - (e - \tau) \log \sum_{t=\tau + 1}^e X_t^2.}
If \code{loss = "cusum"}, the CUSUM statistic of \eqn{X^2} will be used:
\deqn{(\frac{(\tau - s + 1)(e - \tau)}{e - s + 1})^2 (\frac{1}{\tau - s + 1} \sum_{t=s}^{\tau} X_t^2 + \frac{1}{e - \tau} \sum_{t=\tau + 1}^e X_t^2).}
If \code{loss = "icss"}, then
\deqn{\sum_{t=s}^{\tau} X_t^2 / \sum_{t=s}^e X_t^2 - \frac{\tau}{T}.}
The parameters \code{return_full_results}, \code{prev_full_results}, and \code{hlims} are used inside the function \code{calculate_pvals_all}, but can otherwise be ignored.
}
\examples{
set.seed(100)
x <- rnorm(100) + c(rep(1,40), rep(0,10), rep(1,50))
results <- wild_binary_segmentation(x, num_rand_samples=500, threshold=3)
print(results$results)

}
